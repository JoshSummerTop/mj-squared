<div class="container mx-auto px-4 py-8 max-w-4xl">
  <!-- Breadcrumb -->
  <nav class="text-sm mb-6 text-gray-600">
    <%= link_to 'Community', root_path, class: 'text-primary hover:underline' %> / 
    <span class="text-gray-900"><%= @space.title %></span>
  </nav>

  <!-- Space Header -->
  <div class="bg-white rounded-lg shadow border border-gray-200 p-6 mb-8">
    <div class="flex justify-between items-start mb-4">
      <div>
        <h1 class="text-3xl font-bold mb-2"><%= @space.title %></h1>
        
        <!-- Categories -->
        <% if @space.community_categories.any? %>
          <div class="flex flex-wrap gap-2 mb-2">
            <% @space.community_categories.each do |category| %>
              <%= link_to category.name, root_path(tab: category.slug), 
                  class: 'px-2 py-1 bg-primary-50 text-primary-700 text-xs rounded-full hover:underline' %>
            <% end %>
          </div>
        <% end %>

        <!-- Age Groups -->
        <% if @space.age_group_categories.any? %>
          <div class="flex flex-wrap gap-1 mb-4">
            <% @space.age_group_categories.each do |age_group| %>
              <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-full">
                <%= age_group.name %>
              </span>
            <% end %>
          </div>
        <% end %>
      </div>

      <!-- Admin Actions -->
      <% if user_signed_in? && (@space.created_by == current_user || current_user.admin?) %>
        <div class="flex gap-2">
          <%= render "spaces/form_modal", space: @space, action_text: "Edit", title: "Edit Space", button_class: "btn btn-secondary btn-sm" %>
          <%= button_to 'Delete', space_path(@space), method: :delete, 
              data: { confirm: 'Are you sure you want to delete this space? This action cannot be undone.' }, 
              class: 'btn btn-danger btn-sm' %>
        </div>
      <% end %>
    </div>

    <!-- Space Image -->
    <% if @space.image.attached? %>
      <%= image_tag @space.image, class: 'w-full max-w-md h-48 object-cover rounded-lg mb-4' %>
    <% end %>

    <!-- Description -->
    <p class="text-gray-700 mb-4"><%= simple_format(@space.description) %></p>

    <!-- Member Count & Join/Leave Actions -->
    <div class="flex items-center justify-between">
      <p id="member-count" class="text-sm text-gray-600">
        <%= pluralize(@space.memberships.count, 'member') %>
      </p>
      
      <% if user_signed_in? %>
        <div id="membership-actions">
          <%= render partial: "membership_actions", locals: { space: @space, membership: @membership } %>
        </div>
      <% else %>
        <%= link_to 'Sign In to Join', new_user_session_path, class: 'btn btn-primary' %>
      <% end %>
    </div>
  </div>

  <!-- Posts Section -->
  <div class="bg-white rounded-lg shadow border border-gray-200 p-6">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-semibold">Posts</h2>
      <% if @membership %>
        <%= render "posts/form_modal", post: Post.new, space: @space, action_text: "Create Post", title: "Create Post in #{@space.title}", button_class: "btn btn-primary" %>
      <% end %>
    </div>

    <% if @posts.any? %>
      <div id="posts-container" class="space-y-4">
        <% @posts.each do |post| %>
          <%= link_to post_path(post), class: "block" do %>
            <div class="post-card-enhanced animate-fade-in bg-[rgba(189,214,69,0.2)] rounded-2xl p-4 border border-[#5CCBD4] hover:bg-[rgba(189,214,69,0.3)] hover:shadow-md transition-all duration-200 cursor-pointer">
              <div class="flex items-start gap-3">
                <!-- User Avatar -->
                <div class="flex-shrink-0">
                  <%= user_avatar_tag(post.created_by, size: 40, css_class: "w-10 h-10 rounded-full object-cover") %>
                </div>
                
                <!-- Post Content -->
                <div class="flex-1 min-w-0">
                  <!-- Header with name and timestamp -->
                  <div class="flex items-center justify-between mb-2">
                    <h4 class="font-semibold text-gray-900 text-sm">
                      <%= post.created_by.name %>
                    </h4>
                    <span class="text-xs text-gray-500 flex-shrink-0">
                <%= time_ago_in_words(post.created_at) %> ago
              </span>
            </div>
            
                  <!-- Post Content -->
                  <p class="text-sm text-gray-700 mb-3 leading-relaxed">
                    <span class="font-medium text-gray-900"><%= post.title %></span>
                    <% if post.content.present? %>
                      <br><%= truncate(strip_tags(post.content), length: 150) %>
              <% end %>
            </p>

                  <!-- Stats -->
                  <div class="flex items-center gap-4 text-xs text-gray-500">
                    <div class="flex items-center gap-1">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                      </svg>
                      <%= post.likes.count %>
                    </div>
                    <div class="flex items-center gap-1">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                      </svg>
                      <%= post.comments.count %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>
      
      <!-- Load More Button (for infinite scroll) -->
      <% if @has_more_pages %>
        <div id="load-more-container" class="text-center py-6">
          <button id="load-more-btn" 
                  class="btn btn-secondary" 
                  data-page="<%= @current_page + 1 %>" 
                  data-space-id="<%= @space.id %>">
            Load More Posts
          </button>
          <div id="load-more-spinner" class="hidden mt-4">
            <div class="inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600"></div>
            <span class="ml-2 text-gray-600">Loading...</span>
          </div>
        </div>
      <% end %>
    <% else %>
      <div class="text-center py-8 text-gray-500">
        <p class="mb-4">No posts yet in this space.</p>
        <% if @membership %>
          <%= render "posts/form_modal", post: Post.new, space: @space, action_text: "Create the First Post", title: "Create Post in #{@space.title}", button_class: "btn btn-primary" %>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  function initializeInfiniteScroll() {
    const loadMoreBtn = document.getElementById('load-more-btn');
    const loadMoreSpinner = document.getElementById('load-more-spinner');
    const postsContainer = document.getElementById('posts-container');
    
    if (!loadMoreBtn) return;
    
    loadMoreBtn.addEventListener('click', async function() {
      const page = this.dataset.page;
      const spaceId = this.dataset.spaceId;
      
      // Show loading state
      loadMoreBtn.classList.add('hidden');
      loadMoreSpinner.classList.remove('hidden');
      
      try {
        // Fetch from space show page with pagination
        const response = await fetch(`/spaces/${spaceId}?page=${page}`, {
          headers: {
            'Accept': 'text/html',
            'X-Requested-With': 'XMLHttpRequest'
          }
        });
        
        if (response.ok) {
          const html = await response.text();
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, 'text/html');
          
          // Extract new posts from response
          const newPosts = doc.querySelectorAll('#posts-container > .post-card-enhanced');
          const newLoadMoreContainer = doc.querySelector('#load-more-container');
          
          // Append new posts
          newPosts.forEach(post => {
            postsContainer.appendChild(post);
          });
          
          // Update load more button or remove it
          const currentLoadMoreContainer = document.getElementById('load-more-container');
          if (currentLoadMoreContainer) {
            currentLoadMoreContainer.remove();
          }
          
          if (newLoadMoreContainer) {
            postsContainer.parentNode.appendChild(newLoadMoreContainer);
            initializeInfiniteScroll(); // Re-initialize for new button
          }

        }
      } catch (error) {
        console.error('Error loading more posts:', error);
        // Show error state
        loadMoreSpinner.classList.add('hidden');
        loadMoreBtn.textContent = 'Error - Try Again';
        loadMoreBtn.classList.remove('hidden');
      }
    });
  }

  // Initialize on page load
  initializeInfiniteScroll();

  // Re-initialize after turbo frame updates
  document.addEventListener('turbo:frame-load', function() {
    initializeInfiniteScroll();
  });
});
</script>



