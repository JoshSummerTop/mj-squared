// @tiptap/extension-horizontal-rule@3.2.0 downloaded from https://ga.jspm.io/npm:@tiptap/extension-horizontal-rule@3.2.0/dist/index.js

import{Node as t,nodeInputRule as e,canInsertNode as r,isNodeSelection as n,mergeAttributes as o}from"@tiptap/core";import{TextSelection as s,NodeSelection as i}from"@tiptap/pm/state";var a=t.create({name:"horizontalRule",addOptions(){return{HTMLAttributes:{}}},group:"block",parseHTML(){return[{tag:"hr"}]},renderHTML({HTMLAttributes:t}){return["hr",o(this.options.HTMLAttributes,t)]},addCommands(){return{setHorizontalRule:()=>({chain:t,state:e})=>{if(!r(e,e.schema.nodes[this.name]))return false;const{selection:o}=e;const{$to:a}=o;const c=t();n(o)?c.insertContentAt(a.pos,{type:this.name}):c.insertContent({type:this.name});return c.command((({tr:t,dispatch:e})=>{var r;if(e){const{$to:e}=t.selection;const n=e.end();if(e.nodeAfter)e.nodeAfter.isTextblock?t.setSelection(s.create(t.doc,e.pos+1)):e.nodeAfter.isBlock?t.setSelection(i.create(t.doc,e.pos)):t.setSelection(s.create(t.doc,e.pos));else{const o=(r=e.parent.type.contentMatch.defaultType)==null?void 0:r.create();if(o){t.insert(n,o);t.setSelection(s.create(t.doc,n+1))}}t.scrollIntoView()}return true})).run()}}},addInputRules(){return[e({find:/^(?:---|â€”-|___\s|\*\*\*\s)$/,type:this.type})]}});var c=a;export{a as HorizontalRule,c as default};

