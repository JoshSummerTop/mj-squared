// @tiptap/extension-list@3.2.0 downloaded from https://ga.jspm.io/npm:@tiptap/extension-list@3.2.0/dist/index.js

import{Node as t,wrappingInputRule as e,mergeAttributes as s,getNodeType as r,getNodeAtPosition as i,isNodeActive as n,isAtStartOfNode as o,isAtEndOfNode as a,Extension as d}from"@tiptap/core";var c=Object.defineProperty;var p=(t,e)=>{for(var s in e)c(t,s,{get:e[s],enumerable:true})};var u="listItem";var l="textStyle";var h=/^\s*([-+*])\s$/;var m=t.create({name:"bulletList",addOptions(){return{itemTypeName:"listItem",HTMLAttributes:{},keepMarks:false,keepAttributes:false}},group:"block list",content(){return`${this.options.itemTypeName}+`},parseHTML(){return[{tag:"ul"}]},renderHTML({HTMLAttributes:t}){return["ul",s(this.options.HTMLAttributes,t),0]},addCommands(){return{toggleBulletList:()=>({commands:t,chain:e})=>this.options.keepAttributes?e().toggleList(this.name,this.options.itemTypeName,this.options.keepMarks).updateAttributes(u,this.editor.getAttributes(l)).run():t.toggleList(this.name,this.options.itemTypeName,this.options.keepMarks)}},addKeyboardShortcuts(){return{"Mod-Shift-8":()=>this.editor.commands.toggleBulletList()}},addInputRules(){let t=e({find:h,type:this.type});(this.options.keepMarks||this.options.keepAttributes)&&(t=e({find:h,type:this.type,keepMarks:this.options.keepMarks,keepAttributes:this.options.keepAttributes,getAttributes:()=>this.editor.getAttributes(l),editor:this.editor}));return[t]}});var f=t.create({name:"listItem",addOptions(){return{HTMLAttributes:{},bulletListTypeName:"bulletList",orderedListTypeName:"orderedList"}},content:"paragraph block*",defining:true,parseHTML(){return[{tag:"li"}]},renderHTML({HTMLAttributes:t}){return["li",s(this.options.HTMLAttributes,t),0]},addKeyboardShortcuts(){return{Enter:()=>this.editor.commands.splitListItem(this.name),Tab:()=>this.editor.commands.sinkListItem(this.name),"Shift-Tab":()=>this.editor.commands.liftListItem(this.name)}}});var k={};p(k,{findListItemPos:()=>b,getNextListDepth:()=>L,handleBackspace:()=>v,handleDelete:()=>H,hasListBefore:()=>y,hasListItemAfter:()=>I,hasListItemBefore:()=>g,listItemHasSubList:()=>T,nextListIsDeeper:()=>M,nextListIsHigher:()=>A});var b=(t,e)=>{const{$from:s}=e.selection;const i=r(t,e.schema);let n=null;let o=s.depth;let a=s.pos;let d=null;while(o>0&&d===null){n=s.node(o);if(n.type===i)d=o;else{o-=1;a-=1}}return d===null?null:{$pos:e.doc.resolve(a),depth:d}};var L=(t,e)=>{const s=b(t,e);if(!s)return false;const[,r]=i(e,t,s.$pos.pos+4);return r};var y=(t,e,s)=>{const{$anchor:r}=t.selection;const i=Math.max(0,r.pos-2);const n=t.doc.resolve(i).node();return!(!n||!s.includes(n.type.name))};var g=(t,e)=>{var s;const{$anchor:r}=e.selection;const i=e.doc.resolve(r.pos-2);return i.index()!==0&&((s=i.nodeBefore)==null?void 0:s.type.name)===t};var T=(t,e,s)=>{if(!s)return false;const i=r(t,e.schema);let n=false;s.descendants((t=>{t.type===i&&(n=true)}));return n};var v=(t,e,s)=>{if(t.commands.undoInputRule())return true;if(t.state.selection.from!==t.state.selection.to)return false;if(!n(t.state,e)&&y(t.state,e,s)){const{$anchor:s}=t.state.selection;const r=t.state.doc.resolve(s.before()-1);const i=[];r.node().descendants(((t,s)=>{t.type.name===e&&i.push({node:t,pos:s})}));const n=i.at(-1);if(!n)return false;const o=t.state.doc.resolve(r.start()+n.pos+1);return t.chain().cut({from:s.start()-1,to:s.end()+1},o.end()).joinForward().run()}if(!n(t.state,e))return false;if(!o(t.state))return false;const r=b(e,t.state);if(!r)return false;const i=t.state.doc.resolve(r.$pos.pos-2);const a=i.node(r.depth);const d=T(e,t.state,a);return g(e,t.state)&&!d?t.commands.joinItemBackward():t.chain().liftListItem(e).run()};var M=(t,e)=>{const s=L(t,e);const r=b(t,e);return!(!r||!s)&&s>r.depth};var A=(t,e)=>{const s=L(t,e);const r=b(t,e);return!(!r||!s)&&s<r.depth};var H=(t,e)=>{if(!n(t.state,e))return false;if(!a(t.state,e))return false;const{selection:s}=t.state;const{$from:r,$to:i}=s;return!(!s.empty&&r.sameParent(i))&&(M(e,t.state)?t.chain().focus(t.state.selection.from+4).lift(e).joinBackward().run():A(e,t.state)?t.chain().joinForward().joinBackward().run():t.commands.joinItemForward())};var I=(t,e)=>{var s;const{$anchor:r}=e.selection;const i=e.doc.resolve(r.pos-r.parentOffset-2);return i.index()!==i.parent.childCount-1&&((s=i.nodeAfter)==null?void 0:s.type.name)===t};var N=d.create({name:"listKeymap",addOptions(){return{listTypes:[{itemName:"listItem",wrapperNames:["bulletList","orderedList"]},{itemName:"taskItem",wrapperNames:["taskList"]}]}},addKeyboardShortcuts(){return{Delete:({editor:t})=>{let e=false;this.options.listTypes.forEach((({itemName:s})=>{t.state.schema.nodes[s]!==void 0&&H(t,s)&&(e=true)}));return e},"Mod-Delete":({editor:t})=>{let e=false;this.options.listTypes.forEach((({itemName:s})=>{t.state.schema.nodes[s]!==void 0&&H(t,s)&&(e=true)}));return e},Backspace:({editor:t})=>{let e=false;this.options.listTypes.forEach((({itemName:s,wrapperNames:r})=>{t.state.schema.nodes[s]!==void 0&&v(t,s,r)&&(e=true)}));return e},"Mod-Backspace":({editor:t})=>{let e=false;this.options.listTypes.forEach((({itemName:s,wrapperNames:r})=>{t.state.schema.nodes[s]!==void 0&&v(t,s,r)&&(e=true)}));return e}}}});var E="listItem";var $="textStyle";var x=/^(\d+)\.\s$/;var O=t.create({name:"orderedList",addOptions(){return{itemTypeName:"listItem",HTMLAttributes:{},keepMarks:false,keepAttributes:false}},group:"block list",content(){return`${this.options.itemTypeName}+`},addAttributes(){return{start:{default:1,parseHTML:t=>t.hasAttribute("start")?parseInt(t.getAttribute("start")||"",10):1},type:{default:null,parseHTML:t=>t.getAttribute("type")}}},parseHTML(){return[{tag:"ol"}]},renderHTML({HTMLAttributes:t}){const{start:e,...r}=t;return e===1?["ol",s(this.options.HTMLAttributes,r),0]:["ol",s(this.options.HTMLAttributes,t),0]},addCommands(){return{toggleOrderedList:()=>({commands:t,chain:e})=>this.options.keepAttributes?e().toggleList(this.name,this.options.itemTypeName,this.options.keepMarks).updateAttributes(E,this.editor.getAttributes($)).run():t.toggleList(this.name,this.options.itemTypeName,this.options.keepMarks)}},addKeyboardShortcuts(){return{"Mod-Shift-7":()=>this.editor.commands.toggleOrderedList()}},addInputRules(){let t=e({find:x,type:this.type,getAttributes:t=>({start:+t[1]}),joinPredicate:(t,e)=>e.childCount+e.attrs.start===+t[1]});(this.options.keepMarks||this.options.keepAttributes)&&(t=e({find:x,type:this.type,keepMarks:this.options.keepMarks,keepAttributes:this.options.keepAttributes,getAttributes:t=>({start:+t[1],...this.editor.getAttributes($)}),joinPredicate:(t,e)=>e.childCount+e.attrs.start===+t[1],editor:this.editor}));return[t]}});var S=/^\s*(\[([( |x])?\])\s$/;var w=t.create({name:"taskItem",addOptions(){return{nested:false,HTMLAttributes:{},taskListTypeName:"taskList",a11y:void 0}},content(){return this.options.nested?"paragraph block*":"paragraph+"},defining:true,addAttributes(){return{checked:{default:false,keepOnSplit:false,parseHTML:t=>{const e=t.getAttribute("data-checked");return e===""||e==="true"},renderHTML:t=>({"data-checked":t.checked})}}},parseHTML(){return[{tag:`li[data-type="${this.name}"]`,priority:51}]},renderHTML({node:t,HTMLAttributes:e}){return["li",s(this.options.HTMLAttributes,e,{"data-type":this.name}),["label",["input",{type:"checkbox",checked:t.attrs.checked?"checked":null}],["span"]],["div",0]]},addKeyboardShortcuts(){const t={Enter:()=>this.editor.commands.splitListItem(this.name),"Shift-Tab":()=>this.editor.commands.liftListItem(this.name)};return this.options.nested?{...t,Tab:()=>this.editor.commands.sinkListItem(this.name)}:t},addNodeView(){return({node:t,HTMLAttributes:e,getPos:s,editor:r})=>{const i=document.createElement("li");const n=document.createElement("label");const o=document.createElement("span");const a=document.createElement("input");const d=document.createElement("div");const c=t=>{var e,s;a.ariaLabel=((s=(e=this.options.a11y)==null?void 0:e.checkboxLabel)==null?void 0:s.call(e,t,a.checked))||`Task item checkbox for ${t.textContent||"empty task item"}`};c(t);n.contentEditable="false";a.type="checkbox";a.addEventListener("mousedown",(t=>t.preventDefault()));a.addEventListener("change",(e=>{if(!r.isEditable&&!this.options.onReadOnlyChecked){a.checked=!a.checked;return}const{checked:i}=e.target;r.isEditable&&typeof s==="function"&&r.chain().focus(void 0,{scrollIntoView:false}).command((({tr:t})=>{const e=s();if(typeof e!=="number")return false;const r=t.doc.nodeAt(e);t.setNodeMarkup(e,void 0,{...r==null?void 0:r.attrs,checked:i});return true})).run();!r.isEditable&&this.options.onReadOnlyChecked&&(this.options.onReadOnlyChecked(t,i)||(a.checked=!a.checked))}));Object.entries(this.options.HTMLAttributes).forEach((([t,e])=>{i.setAttribute(t,e)}));i.dataset.checked=t.attrs.checked;a.checked=t.attrs.checked;n.append(a,o);i.append(n,d);Object.entries(e).forEach((([t,e])=>{i.setAttribute(t,e)}));return{dom:i,contentDOM:d,update:t=>{if(t.type!==this.type)return false;i.dataset.checked=t.attrs.checked;a.checked=t.attrs.checked;c(t);return true}}}},addInputRules(){return[e({find:S,type:this.type,getAttributes:t=>({checked:t[t.length-1]==="x"})})]}});var j=t.create({name:"taskList",addOptions(){return{itemTypeName:"taskItem",HTMLAttributes:{}}},group:"block list",content(){return`${this.options.itemTypeName}+`},parseHTML(){return[{tag:`ul[data-type="${this.name}"]`,priority:51}]},renderHTML({HTMLAttributes:t}){return["ul",s(this.options.HTMLAttributes,t,{"data-type":this.name}),0]},addCommands(){return{toggleTaskList:()=>({commands:t})=>t.toggleList(this.name,this.options.itemTypeName)}},addKeyboardShortcuts(){return{"Mod-Shift-9":()=>this.editor.commands.toggleTaskList()}}});var B=d.create({name:"listKit",addExtensions(){const t=[];this.options.bulletList!==false&&t.push(m.configure(this.options.bulletList));this.options.listItem!==false&&t.push(f.configure(this.options.listItem));this.options.listKeymap!==false&&t.push(N.configure(this.options.listKeymap));this.options.orderedList!==false&&t.push(O.configure(this.options.orderedList));this.options.taskItem!==false&&t.push(w.configure(this.options.taskItem));this.options.taskList!==false&&t.push(j.configure(this.options.taskList));return t}});export{m as BulletList,f as ListItem,N as ListKeymap,B as ListKit,O as OrderedList,w as TaskItem,j as TaskList,h as bulletListInputRegex,S as inputRegex,k as listHelpers,x as orderedListInputRegex};

